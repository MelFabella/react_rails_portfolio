[{"/Users/user./Desktop/dpl_winter20/react_rails_portfolio/client/src/App.js":"1","/Users/user./Desktop/dpl_winter20/react_rails_portfolio/client/src/components/shared/Navbar.js":"2","/Users/user./Desktop/dpl_winter20/react_rails_portfolio/client/src/components/shared/NoMatch.js":"3","/Users/user./Desktop/dpl_winter20/react_rails_portfolio/client/src/components/shared/Home.js":"4","/Users/user./Desktop/dpl_winter20/react_rails_portfolio/client/src/components/shared/Skills.js":"5","/Users/user./Desktop/dpl_winter20/react_rails_portfolio/client/src/components/blogs/MyBlog.js":"6","/Users/user./Desktop/dpl_winter20/react_rails_portfolio/client/src/components/blogs/BlogForm.js":"7","/Users/user./Desktop/dpl_winter20/react_rails_portfolio/client/src/index.js":"8","/Users/user./Desktop/dpl_winter20/react_rails_portfolio/client/src/components/blogs/BlogList.js":"9","/Users/user./Desktop/dpl_winter20/react_rails_portfolio/client/src/components/blogs/Blog.js":"10","/Users/user./Desktop/dpl_winter20/react_rails_portfolio/client/src/components/posts/Posts.js":"11","/Users/user./Desktop/dpl_winter20/react_rails_portfolio/client/src/providers/BlogProvider.js":"12"},{"size":786,"mtime":1609741606940,"results":"13","hashOfConfig":"14"},{"size":491,"mtime":1609733873071,"results":"15","hashOfConfig":"14"},{"size":195,"mtime":1609711732406,"results":"16","hashOfConfig":"14"},{"size":65,"mtime":1609710946395,"results":"17","hashOfConfig":"14"},{"size":71,"mtime":1609711104534,"results":"18","hashOfConfig":"14"},{"size":366,"mtime":1609818483989,"results":"19","hashOfConfig":"14"},{"size":740,"mtime":1609737095310,"results":"20","hashOfConfig":"14"},{"size":734,"mtime":1609815558551,"results":"21","hashOfConfig":"14"},{"size":569,"mtime":1609742541510,"results":"22","hashOfConfig":"14"},{"size":1172,"mtime":1609820525661,"results":"23","hashOfConfig":"14"},{"size":401,"mtime":1609738005990,"results":"24","hashOfConfig":"14"},{"size":1587,"mtime":1609821966446,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fm0zi5",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},"/Users/user./Desktop/dpl_winter20/react_rails_portfolio/client/src/App.js",[],"/Users/user./Desktop/dpl_winter20/react_rails_portfolio/client/src/components/shared/Navbar.js",[],["54","55"],"/Users/user./Desktop/dpl_winter20/react_rails_portfolio/client/src/components/shared/NoMatch.js",[],["56","57"],"/Users/user./Desktop/dpl_winter20/react_rails_portfolio/client/src/components/shared/Home.js",[],["58","59"],"/Users/user./Desktop/dpl_winter20/react_rails_portfolio/client/src/components/shared/Skills.js",[],"/Users/user./Desktop/dpl_winter20/react_rails_portfolio/client/src/components/blogs/MyBlog.js",[],"/Users/user./Desktop/dpl_winter20/react_rails_portfolio/client/src/components/blogs/BlogForm.js",[],"/Users/user./Desktop/dpl_winter20/react_rails_portfolio/client/src/index.js",[],"/Users/user./Desktop/dpl_winter20/react_rails_portfolio/client/src/components/blogs/BlogList.js",[],"/Users/user./Desktop/dpl_winter20/react_rails_portfolio/client/src/components/blogs/Blog.js",["60","61"],"/Users/user./Desktop/dpl_winter20/react_rails_portfolio/client/src/components/posts/Posts.js",[],"/Users/user./Desktop/dpl_winter20/react_rails_portfolio/client/src/providers/BlogProvider.js",["62"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\n\nconst BlogContext = React.createContext();\n\nexport const BlogConsumer = BlogContext.Consumer;\n\nclass BlogProvider extends Component {\n  state = { blogs: []}\n\n  componentDidMount() {\n    // grab our menus from db\n    axios.get('/api/blogs')\n      .then( res => {\n        // set to state\n        this.setState({ blogs: res.data })\n      })\n      .catch( err => {\n        console.log(err);\n      })\n  }\n\n  addBlog = (blog) => {\n    // add to the db\n    axios.post('/api/blogs', { blog })\n      .then(res => {\n        // add to the state\n        const { blogs } = this.state;\n        this.setState({ blogs: [...blogs, res.data]})\n      })\n      .catch( err => {\n        console.log(err);\n      })\n  }\n\n  updateBlog = (id, blog) => {\n    // update to the db\n    // update to the state\n  }\n\n  deleteBlog = (id) => {\n    // delete in the db\n    axios.delete(`/api/blogs/${id}`)\n    .then( res => {\n      // delete in the state\n      const { blogs } = this.state\n        this.setState({ blogs: blogs.filter( b => b.id !== id)})\n        window.location.href = '/myblog'\n        // return <Redirect to='/myblog' />\n    })\n    .catch( err => {\n      console.log(err);\n    })\n  }\n\n  render() {\n    return(\n      <BlogContext.Provider value={{\n        ...this.state,\n        addBlog: this.addBlog,\n        updateBlog: this.updateBlog,\n        deleteBlog: this.deleteBlog,\n      }}>\n        { this.props.children }\n      </BlogContext.Provider>\n    )\n  }\n}\n\nexport default BlogProvider;",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"63","replacedBy":"67"},{"ruleId":"65","replacedBy":"68"},{"ruleId":"63","replacedBy":"69"},{"ruleId":"65","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":2,"column":8,"nodeType":"73","messageId":"74","endLine":2,"endColumn":13},{"ruleId":"71","severity":1,"message":"75","line":22,"column":36,"nodeType":"73","messageId":"74","endLine":22,"endColumn":43},{"ruleId":"71","severity":1,"message":"76","line":3,"column":10,"nodeType":"73","messageId":"74","endLine":3,"endColumn":18},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],["77"],["78"],["77"],["78"],"no-unused-vars","'Posts' is defined but never used.","Identifier","unusedVar","'editing' is assigned a value but never used.","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]